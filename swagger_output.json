{
  "swagger": "2.0",
  "info": {
    "title": "Green Shop",
    "description": "Documentation automatically generated by swagger-autogen",
    "version": "1.0.0"
  },
  "host": "localhost:8000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format: Bearer <token>"
    }
  },
  "paths": {
    "/api/users/sign-in": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "zhalgas@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/sign-up": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string",
                  "example": "Dimash"
                },
                "lastName": {
                  "type": "string",
                  "example": "Zhalgas"
                },
                "email": {
                  "type": "string",
                  "example": "zhalgas@gmail.com"
                },
                "password": {
                  "type": "string",
                  "example": "12345678"
                },
                "role": {
                  "type": "string",
                  "example": "client"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/verify-email": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "redirect_url",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "arystambekdimash005@gmail.com"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/check-number": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/update-profile": {
      "put": {
        "tags": [
          "users"
        ],
        "description": "",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "formData",
            "description": "User first name.",
            "required": false,
            "type": "string",
            "example": "Dimash"
          },
          {
            "name": "lastName",
            "in": "formData",
            "description": "User last name.",
            "required": false,
            "type": "string",
            "example": "Zhalgas"
          },
          {
            "name": "phoneNumber",
            "in": "formData",
            "description": "User phone number.",
            "required": false,
            "type": "string",
            "example": "+77761856565"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "User email address.",
            "required": false,
            "type": "string",
            "example": "zhalgas@gmail.com"
          },
          {
            "name": "currentPassword",
            "in": "formData",
            "description": "User current password.",
            "required": false,
            "type": "string",
            "example": "1234567878"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "User new password.",
            "required": false,
            "type": "string",
            "example": "12345678"
          },
          {
            "name": "profilePicture",
            "in": "formData",
            "description": "User profile picture (upload).",
            "required": false,
            "type": "file",
            "example": "This upload from postman"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "description": "User data for updating profile.",
          "required": false
        }
      }
    },
    "/api/users/reset-password/initiate": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "redirect_url",
            "in": "query",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/reset-password/validate-token": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/reset-password/reset": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "resetToken": {
                  "example": "any"
                },
                "newPassword": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/users/refresh": {
      "post": {
        "tags": [
          "users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/addresses/shipping": {
      "post": {
        "tags": [
          "shipping-addresses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Shipping address data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "country": {
                  "type": "string",
                  "example": "USA"
                },
                "town": {
                  "type": "string",
                  "example": "New York"
                },
                "street": {
                  "type": "string",
                  "example": "5th Avenue"
                },
                "apartment": {
                  "type": "string",
                  "example": "15A"
                },
                "state": {
                  "type": "string",
                  "example": "NY"
                },
                "zip": {
                  "type": "string",
                  "example": "10001"
                },
                "emailAddress": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+1234567890"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "shipping-addresses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/addresses/shipping/{id}": {
      "get": {
        "tags": [
          "shipping-addresses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "shipping-addresses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Updated shipping address data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "firstName": {
                  "type": "string",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "example": "Doe"
                },
                "country": {
                  "type": "string",
                  "example": "USA"
                },
                "town": {
                  "type": "string",
                  "example": "New York"
                },
                "street": {
                  "type": "string",
                  "example": "5th Avenue"
                },
                "apartment": {
                  "type": "string",
                  "example": "15A"
                },
                "state": {
                  "type": "string",
                  "example": "NY"
                },
                "zip": {
                  "type": "string",
                  "example": "10001"
                },
                "emailAddress": {
                  "type": "string",
                  "example": "john.doe@example.com"
                },
                "phoneNumber": {
                  "type": "string",
                  "example": "+1234567890"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "shipping-addresses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/categories/": {
      "post": {
        "tags": [
          "categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create a new category",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Electronics"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "itemName",
            "in": "query",
            "type": "string"
          },
          {
            "name": "size",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/categories/{id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update category name",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Electronics"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/items/": {
      "post": {
        "tags": [
          "items"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Item title.",
            "required": true,
            "type": "string",
            "example": "Item Title"
          },
          {
            "name": "shortDescription",
            "in": "formData",
            "description": "Item short description.",
            "required": true,
            "type": "string",
            "example": "Short description of the item."
          },
          {
            "name": "cost",
            "in": "formData",
            "description": "Item cost.",
            "required": true,
            "type": "number",
            "example": 99.99
          },
          {
            "name": "size",
            "in": "formData",
            "description": "Item size.",
            "required": true,
            "type": "string",
            "example": "M"
          },
          {
            "name": "sku",
            "in": "formData",
            "description": "Item SKU.",
            "required": true,
            "type": "string",
            "example": "ABC123"
          },
          {
            "name": "categories",
            "in": "formData",
            "description": "Item categories.",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "electronics",
              "gadgets"
            ]
          },
          {
            "name": "tags",
            "in": "formData",
            "description": "Item tags.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "sale",
              "new"
            ]
          },
          {
            "name": "productDescription",
            "in": "formData",
            "description": "Item product description.",
            "required": true,
            "type": "string",
            "example": "Detailed product description here."
          },
          {
            "name": "relatedProducts",
            "in": "formData",
            "description": "Related products.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "12345",
              "67890"
            ]
          },
          {
            "name": "images",
            "in": "formData",
            "description": "Item images (multiple).",
            "required": false,
            "type": "array",
            "items": {
              "type": "file",
              "format": "binary"
            },
            "example": [
              "image1.jpg",
              "image2.png"
            ]
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "description": "Data to create a new item, including multiple images.",
          "required": true
        }
      },
      "get": {
        "tags": [
          "items"
        ],
        "summary": "Get all items",
        "description": "Retrieve a list of all available items.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category.",
            "required": false,
            "type": "string",
            "example": "electronics"
          },
          {
            "name": "minPrice",
            "in": "query",
            "description": "Filter by minimum price.",
            "required": false,
            "type": "number",
            "example": 100
          },
          {
            "name": "maxPrice",
            "in": "query",
            "description": "Filter by maximum price.",
            "required": false,
            "type": "number",
            "example": 500
          },
          {
            "name": "size",
            "in": "query",
            "description": "Filter by size.",
            "required": false,
            "type": "string",
            "example": "L"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort items by a specific field.",
            "required": false,
            "type": "string",
            "enum": [
              "price-asc",
              "price-desc",
              "new-arrivals"
            ],
            "example": "price-asc"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/items/{id}": {
      "get": {
        "tags": [
          "items"
        ],
        "summary": "Get an item by ID",
        "description": "Retrieve details of a specific item using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the item"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "items"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Item ID to update.",
            "example": "60a7f3b0e9d7f8378f4f083a"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Item title.",
            "required": false,
            "type": "string",
            "example": "Updated Item Title"
          },
          {
            "name": "shortDescription",
            "in": "formData",
            "description": "Item short description.",
            "required": false,
            "type": "string",
            "example": "Updated short description of the item."
          },
          {
            "name": "cost",
            "in": "formData",
            "description": "Item cost.",
            "required": false,
            "type": "number",
            "example": 89.99
          },
          {
            "name": "size",
            "in": "formData",
            "description": "Item size.",
            "required": false,
            "type": "string",
            "example": "L"
          },
          {
            "name": "sku",
            "in": "formData",
            "description": "Item SKU.",
            "required": false,
            "type": "string",
            "example": "DEF456"
          },
          {
            "name": "categories",
            "in": "formData",
            "description": "Item categories.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "electronics",
              "accessories"
            ]
          },
          {
            "name": "tags",
            "in": "formData",
            "description": "Item tags.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "featured",
              "new"
            ]
          },
          {
            "name": "productDescription",
            "in": "formData",
            "description": "Item product description.",
            "required": false,
            "type": "string",
            "example": "Updated detailed product description."
          },
          {
            "name": "images",
            "in": "formData",
            "description": "Item images (multiple).",
            "required": false,
            "type": "array",
            "items": {
              "type": "file",
              "format": "binary"
            },
            "example": [
              "updated-image1.jpg",
              "updated-image2.png"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "description": "Data to update an existing item, including multiple images.",
          "required": false
        }
      },
      "delete": {
        "tags": [
          "items"
        ],
        "summary": "Delete an item",
        "description": "Delete a specific item using its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the item to delete"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/items/{id}/comments": {
      "get": {
        "tags": [
          "items"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/orders/": {
      "post": {
        "tags": [
          "orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Order data.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "shippingAddressId": {
                  "type": "string",
                  "example": "60d5f484f1d2c916c4a1b1c1"
                },
                "items": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "item": {
                        "type": "string",
                        "example": "60d5f484f1d2c916c4a1b1c2"
                      },
                      "quantity": {
                        "type": "number",
                        "example": 2
                      }
                    }
                  }
                },
                "orderNotes": {
                  "type": "string",
                  "example": "Please deliver between 9 AM to 5 PM."
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of orders per page",
            "required": false,
            "type": "integer"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the order"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the order to cancel"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/orders/orders/all": {
      "get": {
        "tags": [
          "orders"
        ],
        "description": "",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "userId",
            "in": "query",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter orders created before this date (ISO8601)",
            "required": false,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/baskets/add": {
      "post": {
        "tags": [
          "baskets"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "itemId": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/baskets/": {
      "get": {
        "tags": [
          "baskets"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/baskets/remove": {
      "delete": {
        "tags": [
          "baskets"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "itemId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/baskets/clear": {
      "delete": {
        "tags": [
          "baskets"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/wishlists/add": {
      "post": {
        "tags": [
          "wishlist"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "itemId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/wishlists/": {
      "get": {
        "tags": [
          "wishlist"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/wishlists/remove": {
      "delete": {
        "tags": [
          "wishlist"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "itemId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/wishlists/clear": {
      "delete": {
        "tags": [
          "wishlist"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/reviews/create": {
      "post": {
        "tags": [
          "reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Create a review for an item.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "itemId": {
                  "type": "string",
                  "example": "607c191e810c19729de860ea"
                },
                "rating": {
                  "type": "number",
                  "example": 5
                },
                "comment": {
                  "type": "string",
                  "example": "Excellent product!"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/reviews/{itemId}": {
      "get": {
        "tags": [
          "reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the item to get reviews for.",
            "example": "607c191e810c19729de860ea"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/reviews/user/{userId}": {
      "get": {
        "tags": [
          "reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to get reviews for.",
            "example": "5f50c31e5b2c3e2d3d1a44f3"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/reviews/{reviewId}": {
      "delete": {
        "tags": [
          "reviews"
        ],
        "description": "",
        "parameters": [
          {
            "name": "reviewId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the review to delete.",
            "example": "607c191e810c19729de860ea"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}